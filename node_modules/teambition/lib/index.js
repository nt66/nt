// Generated by CoffeeScript 1.8.0
(function() {
  var Teambition, exports, request;

  request = require('request');

  Teambition = (function() {
    Teambition.prototype.protocol = 'https';

    Teambition.prototype.host = 'api.teambition.com';

    function Teambition(token, host, protocol) {
      this.token = token;
      if (host) {
        this.host = host;
      }
      if (protocol) {
        this.protocol = protocol;
      }
    }

    Teambition.prototype.invokeGeneric = function(method, apiURL, params, callback) {
      var options;
      if (typeof params === 'function') {
        callback = params;
        params = {};
      }
      params || (params = {});
      apiURL = "" + this.protocol + "://" + this.host + apiURL;
      options = {
        method: method,
        headers: {
          'Content-Type': 'application/json',
          "Authorization": "OAuth2 " + this.token
        },
        url: apiURL,
        json: true
      };
      if (method.toLowerCase() !== 'get') {
        options.form = params;
      } else {
        options.qs = params;
      }
      return request(options, function(err, resp, body) {
        if (err || resp && resp.statusCode !== 200) {
          err || (err = body);
        }
        return callback(err, body);
      });
    };

    Teambition.prototype.api = function(apiURL, params, callback) {
      return this.invokeGeneric('GET', apiURL, params, callback);
    };

    Teambition.prototype.get = function() {
      return this.api.apply(this, arguments);
    };

    Teambition.prototype.post = function(apiURL, params, callback) {
      return this.invokeGeneric('POST', apiURL, params, callback);
    };

    Teambition.prototype.put = function(apiURL, params, callback) {
      return this.invokeGeneric('PUT', apiURL, params, callback);
    };

    Teambition.prototype.del = function(apiURL, params, callback) {
      return this.invokeGeneric('DELETE', apiURL, params, callback);
    };

    return Teambition;

  })();

  exports = module.exports = Teambition;

}).call(this);
